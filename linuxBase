linux系统编程学习

1.API & ABI（二进制接口）
2.标准：
POSIX ：可移植操作系统接口
& SUS

3.文件：
linux下，普通文件就是以线性字节数组组织的字节流，就是普通文件，没有特殊格式要求。
用文件偏移地址读取文件，文件位置起始于0，可以在任意位置写字节
文件长度：文件的字节数
文件打开后对应唯一一个文件描述符，进程可以共享该文件描述符
目录文件存储的是inode和文件名的映射关系
目录操作：添加链接或者删除链接（link：文件名与inode的映射）==》 目录只能允许添加文件或者删除文件

硬链接：将不同名字映射到同一个indoe信息节点的多个链接称为硬链接。（一个文件对应多个名字 link：）
inode拥有link count，当连接计数为0时，才真正解除关联，删除文件

符号链接：解决不同文件系统之间的问题。 每一个symlink 都有自己的 inode 和包含被连接文件完整路径名的数据块（类似快捷方式）
解析时必须解析两个文件：符号文件和被连接的文件 ==》增大开销

硬链接与符号链接比较：硬链接是直接连接到一个文件，记录不同的文件名对应的文件inode，相当于多了一个映射；符号链接相当于另外一个文件，存储自己的信息和被连接的文件inode信息。
（相当于多了一个文件）
特殊文件：
（1）设备文件：字符设备（以字节流读取，如键盘）、块设备（以字节数组读取）
（2）命名管道：进程间相互通信，一个进程的输出以管道的方式作为另一个进程的输入。（FIFO）
（3）套接字：Unix域套接字（本机）与网络套接字
文件系统是以合法层次结构组织的文件和目录的集合
文件的挂载（mount）与卸载（unmount）==》挂载点，可以挂载其他的文件系统，如硬盘上的文件系统FAT等
4.进程
linux下可执行的文件格式一般为ELF格式
段的概念：重要的段包括：代码段、数据段和bss段
代码段包括可执行代码和只读数据，如常量，经常标记为只读和可执行。数据段包括已初始化的数据，如变量，通常标记为可读写。bss 段包括未初始化的全局数据。
线程是进程的活动单元，分为单线程进程和多线程进程。线程包括栈（存储变量）、处理器状态（eflags）、pc
进程空间是一颗树，init进程为跟，其他的是父子进程关系
5.用户和组
用户唯一标示：uid，与进程关联，进程会记录uid，表示该进程的真实uid，子进程继承父进程的uid
有效uid：用于执行用户的切换，只要是有效uid用户都可以执行该进程
6.信号：用于进程与进程、内核与进程之间的控制
7.进程通讯机制（IPC）：包括管道、命名管道、信号量、消息队列、共享内存、快速用户空间互斥体
